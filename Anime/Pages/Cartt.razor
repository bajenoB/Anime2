@page "/cart"
@inject ICartService CartService
@using Anime.Model;
@using Anime.Data;



 @if (cartItems == null || cartItems.Count <= 0)
    {
    <span>You have no items in your cart.</span>
}
else
{

    <a class="button" @onclick="((args)=>BuyItems())">Buy all</a>
    <div class="main_products_cards">
    @foreach (var item in cartItems)
    {
        <div class="product-item">
                <img src="@item.Image">
                <div class="product-list">
                    <h3>@item.Name</h3>
                    <h4>@item.Description</h4>
                    <span class="price">@item.Price </span>
                    <a class="button" @onclick="((args)=>DeleteItem(item))">Delete from cart</a>
                    

                   
                    
                </div>
            </div>
            
        }
    </div>
}



@code 
{

    List<Cart> cartItems = new List<Cart>();
    bool orderPlaced = false;
    int allprice;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteItem(Cart item)
    {
        await CartService.DeleteItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async Task BuyItems()
    {
        @foreach (var item1 in cartItems)
        {
            await CartService.DeleteItem(item1);
            cartItems = await CartService.GetCartItems();
        }
       
    }

    

}
